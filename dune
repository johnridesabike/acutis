(library
 (public_name acutis)
 (modules acutis)
 (libraries acutis.internals))

(executable
 (name acutis_cli)
 (public_name acutis)
 (modules acutis_cli)
 (package acutis)
 (libraries acutis yojson dune-build-info))

(executable
 (name acutis_js)
 (modules acutis_js)
 (modes js)
 (libraries acutis)
 (js_of_ocaml
  (flags
   (--enable effects)
   (--disable excwrap))
  ; excwrap breaks the Eleventy plugin.
  ; Dune's dev profile needs this flag in build_runtime_flags.
  (build_runtime_flags
   (--disable excwrap)))
 (preprocess
  (pps js_of_ocaml-ppx)))

(rule
 (copy %{dep:acutis_js.bc.js} main.cjs))

(executable
 (name package_json)
 (modules package_json))

; We pass all of the file names as arguments so Dune can track dependencies and
; so other source files don't need to hard-code them.

(rule
 (deps README.md LICENSE)
 (action
  (with-stdout-to
   package.json
   (run
    %{dep:package_json.exe}
    --version
    %{version:acutis}
    --export
    "./eleventy"
    ./%{dep:eleventy.js}
    --export
    "."
    ./%{dep:main.cjs}
    --import
    "#main"
    ./%{dep:main.cjs}))))

(alias
 (name ci)
 (deps
  (alias_rec fmt)
  (alias_rec default)
  (alias_rec runtest)
  (alias_rec doc)))

; Our docs folder contains symlinks to our Dune build folder, but otherwise uses
; a completely different build system. It's easier to just manage it separately.
; We need to exclude it so as not to confuse Dune.

(dirs :standard \ docs)
