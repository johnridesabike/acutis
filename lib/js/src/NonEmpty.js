// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("@rescript/std/lib/js/belt_Array.js");
var Belt_MutableQueue = require("@rescript/std/lib/js/belt_MutableQueue.js");

function fromQueue(hd, tl) {
  var q = Belt_MutableQueue.make(undefined);
  Belt_MutableQueue.add(q, hd);
  Belt_MutableQueue.transfer(tl, q);
  return Belt_MutableQueue.toArray(q);
}

function toArray(a) {
  return a;
}

function size(prim) {
  return prim.length;
}

function hd(a) {
  return a[0];
}

function one(x) {
  return [x];
}

function two(x, y) {
  return [
          x,
          y
        ];
}

function fromArrayExn(a) {
  if (a.length !== 0) {
    return a;
  }
  throw {
        RE_EXN_ID: "Invalid_argument",
        _1: "NonEmpty.fromArrayExn",
        Error: new Error()
      };
}

var get = Belt_Array.get;

var map = Belt_Array.mapU;

var unzip = Belt_Array.unzip;

var zip = Belt_Array.zip;

var zipBy = Belt_Array.zipByU;

exports.fromQueue = fromQueue;
exports.toArray = toArray;
exports.size = size;
exports.one = one;
exports.two = two;
exports.fromArrayExn = fromArrayExn;
exports.hd = hd;
exports.get = get;
exports.map = map;
exports.unzip = unzip;
exports.zip = zip;
exports.zipBy = zipBy;
/* No side effect */
