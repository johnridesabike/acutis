// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Inputs Bad source input 1`] = `
Array [
  Object {
    "exn": Object {
      "RE_EXN_ID": "Caml_js_exceptions.Error/1",
      "_1": [TypeError: source.str.charAt is not a function],
    },
    "kind": "Compile",
    "location": undefined,
    "message": "An exception was thrown while compiling this template. This is probably due to malformed input.",
    "path": Array [
      "Template",
    ],
  },
]
`;

exports[`Lexer Illegal binding names 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"null\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Illegal binding names 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"false\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Illegal characters 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 10,
    },
    "message": "Invalid character: \\"*\\".",
    "path": Array [
      "BadCharacter",
    ],
  },
]
`;

exports[`Lexer Illegal characters 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected character: \\"a\\". Expected: \\".\\".",
    "path": Array [
      "BadCharacter",
    ],
  },
]
`;

exports[`Lexer Illegal characters 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected character: \\"b\\". Expected: \\".\\".",
    "path": Array [
      "BadCharacter",
    ],
  },
]
`;

exports[`Lexer Illegal characters 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 15,
    },
    "message": "Unexpected character: \\"%\\". Expected: \\"}\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Illegal characters 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 7,
    },
    "message": "Invalid character: \\"%\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Illegal characters 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 7,
    },
    "message": "Unexpected token: \\"b\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Illegal characters 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"?\\".",
    "path": Array [
      "BadCharacter",
    ],
  },
]
`;

exports[`Lexer Illegal characters 8`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 9,
    },
    "message": "Unexpected character: \\"%\\". Expected: \\"}\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Other stuff 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 7,
    },
    "message": "Unterminated string.",
    "path": Array [
      "BadString",
    ],
  },
]
`;

exports[`Lexer Other stuff 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 8,
    },
    "message": "Unterminated string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Other stuff 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 4,
    },
    "message": "Unterminated comment.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Other stuff 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 4,
    },
    "message": "Unterminated comment.",
    "path": Array [
      "BadComment",
    ],
  },
]
`;

exports[`Lexer Other stuff 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 6,
    },
    "message": "Unexpected end of file.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Lexer Other stuff 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 5,
    },
    "message": "\\"--1\\" is an illegal identifier name.",
    "path": Array [
      "BadIdentifier",
    ],
  },
]
`;

exports[`Lexer Other stuff 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Syntax",
    "location": Object {
      "char": 6,
    },
    "message": "Unknown escape sequence: a.",
    "path": Array [
      "InvalidEscapeToken",
    ],
  },
]
`;

exports[`Matching: partial matching Dictionary partial matches 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
_",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: partial matching Integers 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
1",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: partial matching Lists 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[_, ..._]",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: partial matching Lists 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: partial matching Records 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
{a, b: 0}",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: unused patterns Basic patterns 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 76,
    },
    "message": "This match case is unused:
10, 11, 12",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: unused patterns Basic patterns 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 120,
    },
    "message": "This match case is unused:
30, 31, 42",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: unused patterns Nests merge into wildcards correctly 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 51,
    },
    "message": "This match case is unused:
(_, _), 40",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Matching: unused patterns Unused nest patterns are reported correctly. 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 82,
    },
    "message": "This match case is unused:
(\\"a\\", \\"b\\"), 1",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Components that didn't compile are reported correctly 1`] = `
Object {
  "NAME": "errors",
  "VAL": Array [
    Object {
      "exn": undefined,
      "kind": "Syntax",
      "location": Object {
        "char": 2,
      },
      "message": "Unexpected end of file.",
      "path": Array [
        "A",
      ],
    },
  ],
}
`;

exports[`Parser Duplicate components are reported correctly 1`] = `
Object {
  "NAME": "errors",
  "VAL": Array [
    Object {
      "exn": undefined,
      "kind": "Compile",
      "location": undefined,
      "message": "The template component name \\"A\\" was used twice. Every component needs a unique name.",
      "path": Array [],
    },
  ],
}
`;

exports[`Parser Illegal binding name 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 16,
    },
    "message": "Only bindings are allowed as list tails.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Illegal binding name 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"null\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Invalid statements 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"c\\".",
    "path": Array [
      "BadStatement",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"{\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"[\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"}\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"]\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\",\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 9,
    },
    "message": "Unexpected token: \\"/\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\":\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 8`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"\\"a\\"\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 9`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 10`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 27,
    },
    "message": "Unexpected token: \\"[end of file]\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 11`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 30,
    },
    "message": "Unexpected token: \\"[end of file]\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 12`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"/\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 13`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 7,
    },
    "message": "Unexpected token: \\"#\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 14`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 20,
    },
    "message": "Unexpected token: \\"[text]:  d\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 15`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 7,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 16`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 3,
    },
    "message": "Unexpected token: \\"...\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 17`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 3,
    },
    "message": "Unexpected token: \\"=\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 18`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 9,
    },
    "message": "Unexpected token: \\"~\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 19`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 7,
    },
    "message": "Unexpected token: \\"match\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser Unexpected tokens 20`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"&\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Parser You can't unescape child templates 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 4,
    },
    "message": "Unexpected token: \\"A\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Count mismatch failure 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 9,
    },
    "message": "The number of patterns does not match the number of data.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Count mismatch failure 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "Map blocks can only have two patterns per \\"with\\" clause: the item and the index.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Illegal bindings 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 24,
    },
    "message": "Unexpected token: \\"Abc\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Illegal bindings 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 23,
    },
    "message": "Unexpected token: \\"null\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Illegal bindings 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 23,
    },
    "message": "Unexpected token: \\"true\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Illegal bindings 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 24,
    },
    "message": "Unexpected token: \\"false\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Illegal bindings 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 4,
    },
    "message": "Unexpected token: \\"null\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Missing bindings 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "Input is missing JSON object key \\"b\\" which is required.",
    "path": Array [],
  },
]
`;

exports[`Patterns Missing bindings 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "Input is missing JSON object key \\"b\\" which is required.",
    "path": Array [],
  },
]
`;

exports[`Patterns Missing bindings 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON null\\", which does not match the template's required type, [int].",
    "path": Array [
      "key: c",
    ],
  },
]
`;

exports[`Patterns Missing child components are reported correctly. 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This call of component \\"A\\" is missing child \\"B.\\"",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Missing child components are reported correctly. 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This call of component \\"A\\" includes unexpected child \\"C.\\"",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Non-exhuastive matching 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 10,
    },
    "message": "This pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
{favoriteColor: \\"a\\", firstName}",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type boolean but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type boolean but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type boolean but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type boolean but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type boolean but expected type [int].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type boolean but expected type [int].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Boolean pattern 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 39,
    },
    "message": "This pattern is type boolean but expected type {\\"a\\": _}.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type [int] but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type [int] but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 32,
    },
    "message": "This pattern is type [int] but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type [_] but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 29,
    },
    "message": "This pattern is type [_] but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 39,
    },
    "message": "This pattern is type [_] but expected type {\\"a\\": _}.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors List pattern 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 39,
    },
    "message": "This pattern is type int but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 32,
    },
    "message": "This pattern is type {\\"a\\": _} but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type {\\"a\\": _} but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 34,
    },
    "message": "This pattern is type {\\"a\\": _} but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type {\\"a\\": _} but expected type [_].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 30,
    },
    "message": "This pattern is type {\\"a\\": _} but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors Record pattern 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 36,
    },
    "message": "This pattern is type int but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors number pattern 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type int but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors number pattern 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 34,
    },
    "message": "This pattern is type int but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors number pattern 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 35,
    },
    "message": "This pattern is type int but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors number pattern 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 32,
    },
    "message": "This pattern is type int but expected type [_].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors number pattern 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 39,
    },
    "message": "This pattern is type int but expected type {\\"a\\": _}.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors string pattern 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 31,
    },
    "message": "This pattern is type string but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors string pattern 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 34,
    },
    "message": "This pattern is type string but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors string pattern 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 35,
    },
    "message": "This pattern is type string but expected type boolean.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors string pattern 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 33,
    },
    "message": "This pattern is type string but expected type [int].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Type errors string pattern 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 39,
    },
    "message": "This pattern is type string but expected type {\\"a\\": _}.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 16,
    },
    "message": "Unexpected token: \\"}\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 17,
    },
    "message": "Unexpected token: \\",\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 17,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 21,
    },
    "message": "Unexpected token: \\"[\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 19,
    },
    "message": "Unexpected token: \\"\\"a\\"\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 20,
    },
    "message": "Unexpected token: \\",\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 16,
    },
    "message": "Only bindings are allowed as list tails.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 8`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 24,
    },
    "message": "Unexpected token: \\"]\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 9`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 25,
    },
    "message": "Unexpected token: \\"[\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 10`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 25,
    },
    "message": "Unexpected token: \\"b\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 11`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 19,
    },
    "message": "Unexpected token: \\"b\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 12`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 19,
    },
    "message": "Unexpected token: \\"]\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 13`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 11,
    },
    "message": "Unexpected token: \\"}\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 14`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 11,
    },
    "message": "Unexpected token: \\"match\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 15`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 18,
    },
    "message": "Unexpected token: \\"a\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 16`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 26,
    },
    "message": "Unexpected token: \\"map\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 17`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 26,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 18`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 13,
    },
    "message": "Unexpected token: \\"B\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 19`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 13,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns Unexpected tokens 20`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Parse",
    "location": Object {
      "char": 5,
    },
    "message": "Unexpected token: \\"1\\".",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Patterns You can't bind a value more than once. 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Matching",
    "location": Object {
      "char": 20,
    },
    "message": "\\"x\\" is bound multiple times in this pattern.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Error messages display component name correctly 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This call of component \\"A\\" is missing prop \\"a\\" of type echoable.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Exceptions thrown in components are caught correctly 1`] = `
Array [
  Object {
    "exn": Object {
      "Error": [Error],
      "RE_EXN_ID": "Failure",
      "_1": "fail.",
    },
    "kind": "Render",
    "location": Object {
      "char": 3,
    },
    "message": "Template component \\"A\\" threw an exception.",
    "path": Array [
      "ExceptionsTest",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON string\\", which does not match the template's required type, [{\\"a\\": echoable}].",
    "path": Array [
      "key: a",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON boolean\\", which does not match the template's required type, [{\\"a\\": echoable}].",
    "path": Array [
      "key: b",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON string\\", which does not match the template's required type, [int].",
    "path": Array [
      "key: a",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "Input is missing JSON object key \\"z\\" which is required.",
    "path": Array [],
  },
]
`;

exports[`Rendering Map type mismatches 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern is type {\\"a\\": int} but expected type [echoable].",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 6`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern is type string but expected type int.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 7`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern is type {\\"a\\": int} but expected type <echoable>.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Map type mismatches 8`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "This pattern is type int but expected type string.",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Missing bindings 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "Input is missing JSON object key \\"z\\" which is required.",
    "path": Array [],
  },
]
`;

exports[`Rendering Missing bindings 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 3,
    },
    "message": "Children are not allowed in root templates, only in components.",
    "path": Array [],
  },
]
`;

exports[`Rendering Missing bindings 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Compile",
    "location": Object {
      "char": 3,
    },
    "message": "Template component \\"Z\\" is missing, which is required by \\"<root>.\\"",
    "path": Array [
      "",
    ],
  },
]
`;

exports[`Rendering Missing bindings 4`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 7,
    },
    "message": "Children are not allowed in root templates, only in components.",
    "path": Array [],
  },
]
`;

exports[`Rendering Missing bindings 5`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "Input is missing JSON object key \\"b\\" which is required.",
    "path": Array [],
  },
]
`;

exports[`Rendering Type mismatches 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON boolean\\", which does not match the template's required type, echoable.",
    "path": Array [
      "key: b",
    ],
  },
]
`;

exports[`Rendering Type mismatches 2`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON array\\", which does not match the template's required type, echoable.",
    "path": Array [
      "key: c",
    ],
  },
]
`;

exports[`Rendering Type mismatches 3`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Render",
    "location": undefined,
    "message": "This input is type \\"JSON boolean\\", which does not match the template's required type, echoable.",
    "path": Array [
      "key: b",
    ],
  },
]
`;

exports[`Stack trace is rendered correctly components 1`] = `
Array [
  Object {
    "exn": undefined,
    "kind": "Type",
    "location": Object {
      "char": 26,
    },
    "message": "This call of component \\"C\\" is missing prop \\"c\\" of type echoable.",
    "path": Array [
      "B",
    ],
  },
]
`;
