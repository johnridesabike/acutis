Illegal character 1
---
File "<test>", 1:9-1:10
Syntax error.
Unexpected character: '*'

Illegal character 2
---
File "<test>", 1:4-1:5
Syntax error.
Unexpected character: '+'

Illegal character 3
---
File "<test>", 1:12-1:13
Syntax error.
Unexpected character: '&'

Illegal character 4
---
File "<test>", 1:6-1:7
Syntax error.
Unexpected character: '&'

A number greater than the maximum integer is a syntax error.
---
File "<test>", 1:10-1:29
Syntax error.
Invalid integer: 9999999999999999999

Illegal name: echo null
---
File "<test>", 1:4-1:8
Parse error.
This is not a valid echo.

Illegal name: echo false
---
File "<test>", 1:4-1:9
Parse error.
This is not a valid echo.

Illegal name: echo true
---
File "<test>", 1:4-1:8
Parse error.
This is not a valid echo.

Illegal name: _
---
File "<test>", 1:9-1:10
Type error.
Underscore ('_') is not a valid name.

Unterminated strings
---
File "<test>", 1:4-1:6
Syntax error.
Unterminated string.

Unterminated comment
---
File "<test>", 1:1-1:11
Syntax error.
Unterminated comment.

Unterminated comment (nested)
---
File "<test>", 1:4-1:8
Syntax error.
Unterminated comment.

Unterminated expressions
---
File "<test>", 1:9-1:9
Parse error.
This is not a valid pattern.

Illegal escape sequence
---
File "<test>", 1:5-1:7
Syntax error.
Unexpected character: 'a'

Missing a closing component name
---
File "<test>", 1:19-1:20
Parse error.
Expected a component name.

Unclosed components (this one is confusing.)
---
File "<test>", 1:16-1:16
Parse error.
Unclosed component.

Unexpected tokens (1)
---
File "<test>", 1:4-1:5
Parse error.
Expected a '%}', 'match', 'map', 'map_dict', or a component name.

Unexpected tokens (2)
---
File "<test>", 1:5-1:6
Parse error.
Expected a '%}', 'match', 'map', 'map_dict', or a component name.

Unexpected tokens (3)
---
File "<test>", 1:5-1:9
Parse error.
Expected a '%}', 'match', 'map', 'map_dict', or a component name.

Unexpected tokens (4)
---
File "<test>", 1:10-1:11
Parse error.
Expected a '%}', 'match', 'map', 'map_dict', or a component name.

Unexpected tokens (5)
---
File "<test>", 1:40-1:41
Parse error.
Expected a '%}'.

Unexpected tokens (inside # blocks)
---
File "<test>", 1:20-1:24
Parse error.
Expected a '%}', '#', 'match', 'map', 'map_dict', or a component name.

Bad pattern (1)
---
File "<test>", 1:10-1:13
Parse error.
This is not a valid pattern.

Bad pattern (2)
---
File "<test>", 1:11-1:14
Parse error.
This is not a valid pattern.

Bad pattern (3)
---
File "<test>", 1:11-1:14
Parse error.
This is not a valid pattern.

Bad pattern (4)
---
File "<test>", 1:11-1:14
Parse error.
This is not a valid pattern.

Bad pattern (5)
---
File "<test>", 1:13-1:16
Parse error.
This is not a valid pattern.

Bad pattern (6)
---
File "<test>", 1:13-1:16
Parse error.
This is not a valid pattern.

Bad pattern (7)
---
File "<test>", 1:8-1:11
Parse error.
This is not a valid pattern.

Bad pattern (8)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid pattern.

Bad pattern (9)
---
File "<test>", 1:12-1:16
Parse error.
This is not a valid pattern.

Bad pattern (10)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid pattern.

Bad pattern (11)
---
File "<test>", 1:12-1:16
Parse error.
This is not a valid pattern.

Bad pattern (12)
---
File "<test>", 1:15-1:19
Parse error.
This is not a valid pattern.

Bad pattern (13)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid pattern.

Unclosed < (4)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid pattern.

Illegal pattern after with
---
File "<test>", 1:17-1:20
Parse error.
This is not a valid pattern.

Bad pattern (14)
---
File "<test>", 1:8-1:11
Parse error.
This is not a valid pattern.

Bad pattern (15)
---
File "<test>", 1:15-1:18
Parse error.
This is not a valid pattern.

Bad echo (1)
---
File "<test>", 1:4-1:8
Parse error.
This is not a valid echo.

Bad echo (2)
---
File "<test>", 1:5-1:9
Parse error.
This is not a valid echo.

Bad echo (3)
---
File "<test>", 1:8-1:12
Parse error.
This is not a valid echo.

Bad echo (4)
---
File "<test>", 1:7-1:11
Parse error.
This is not a valid echo.

Bad echo (5)
---
File "<test>", 1:7-1:9
Parse error.
Expected a '}}}'.

Bad echo (6)
---
File "<test>", 1:6-1:9
Parse error.
Expected a '}}'.

Bad echo format (1)
---
File "<test>", 1:6-1:7
Parse error.
This is missing a format specification.

Bad echo format (2)
---
File "<test>", 1:5-1:6
Syntax error.
Unexpected character: 'z'

Bad prop (1)
---
File "<test>", 1:6-1:10
Parse error.
This is not a valid component prop.

Bad prop (2)
---
File "<test>", 1:8-1:9
Parse error.
This is not a valid component prop.

Bad prop (3)
---
File "<test>", 1:8-1:9
Parse error.
This is not a valid component prop.

Bad prop (4)
---
File "<test>", 1:12-1:16
Parse error.
This is not a valid component prop.

Illegal field name (1)
---
File "<test>", 1:12-1:16
Parse error.
This is not a valid field name.

Illegal field name (2)
---
File "<test>", 1:13-1:17
Parse error.
This is not a valid field name.

Illegal field name (3)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid field name.

Illegal field name (4)
---
File "<test>", 1:12-1:16
Parse error.
This is not a valid field name.

Illegal field name (5)
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid field name.

Unclosed { (1)
---
File "<test>", 1:13-1:17
Parse error.
Expected a ',', ':', or '}'.

Unclosed { (2)
---
File "<test>", 1:23-1:27
Parse error.
Expected a ',', ':', or '}'.

Unclosed { (3)
---
File "<test>", 1:15-1:19
Parse error.
Expected a ':'.

Unclosed { (4)
---
File "<test>", 1:15-1:19
Parse error.
Expected a ',' or '}'.

Unclosed { (5)
---
File "<test>", 1:16-1:20
Parse error.
Expected a ',' or '}'.

Unclosed (
---
File "<test>", 1:13-1:17
Parse error.
Expected a ',' or ')'.

Unclosed [ (1)
---
File "<test>", 1:13-1:17
Parse error.
Expected a ',', '...', or ']'.

Unclosed [ (2)
---
File "<test>", 1:16-1:20
Parse error.
Expected a ']'.

Unclosed < (1)
---
File "<test>", 1:13-1:17
Parse error.
Expected a ',', ':', or '>'.

Unclosed < (2)
---
File "<test>", 1:15-1:19
Parse error.
Expected a ':'.

Unclosed < (3)
---
File "<test>", 1:15-1:19
Parse error.
Expected a ',' or '>'.

Missing commas in match/map patterns (1)
---
File "<test>", 1:12-1:13
Parse error.
Sequential patterns must be separated by a ','.

Missing commas in match/map patterns (2)
---
File "<test>", 1:15-1:16
Parse error.
Sequential patterns must be separated by a ','.

Missing commas in match/map patterns (3)
---
File "<test>", 1:10-1:11
Parse error.
Sequential patterns must be separated by a ','.

Missing commas in match/map patterns (4)
---
File "<test>", 1:16-1:20
Parse error.
Sequential patterns must be separated by a ','.

Missing commas in match/map patterns (5)
---
File "<test>", 1:25-1:26
Parse error.
Sequential patterns must be separated by a ','.

Missing commas in match/map patterns (5)
---
File "<test>", 1:21-1:22
Parse error.
Sequential patterns must be separated by a ','.

Unmatched match
---
File "<test>", 1:26-1:26
Parse error.
Unclosed block. Expected a '{% /' somewhere.

Missing /match
---
File "<test>", 1:26-1:29
Parse error.
Expected a '/match'.

Missing /map
---
File "<test>", 1:24-1:29
Parse error.
Expected a '/map'.

Missing /map_dict
---
File "<test>", 1:29-1:32
Parse error.
Expected a '/map_dict'.

Unseparated echoes
---
File "<test>", 1:6-1:7
Parse error.
Sequential echoes must be separated by a '?'.

# Blocks must contain text
---
File "<test>", 1:10-1:13
Parse error.
Expected a '%}'.

Bad record field access (1)
---
File "<test>", 1:12-1:13
Parse error.
This is not a valid field name.

Bad record field access (2)
---
File "<test>", 1:6-1:7
Parse error.
This is not a valid field name.

Duplicate field
---
File "<test>", 1:24-1:30
Type error.
Duplicate field 'a'.

Duplicate tag field
---
File "<test>", 1:25-1:31
Type error.
Duplicate field 'a'.

Duplicate dict field
---
File "<test>", 1:24-1:30
Type error.
Duplicate field 'a'.

Multiple record tags
---
File "<test>", 1:25-1:32
Type error.
This tagged record has multiple tags.

Pattern count mismatch 1
---
File "<test>", 1:4-1:42
Type error.
Pattern count mismatch.

Pattern count mismatch 2
---
File "<test>", 1:30-1:42
Type error.
Pattern count mismatch.

Pattern count mismatch 3 (error location is correct)
---
File "<test>", 1:22-1:31
Type error.
Pattern count mismatch.

Pattern count mismatch (map)
---
File "<test>", 1:4-1:56
Type error.
Expressions 'map' and 'map_dict' can only have one or two patterns for each
'with' expression.

You can't bind a name more than once when destructuring.
---
File "<test>", 1:21-1:22
Type error.
The name 'x' is already bound in this pattern.

Echoed string literals cannot appear before a ?.
---
File "<test>", 1:4-1:8
Type error.
Type mismatch.
Expected:
  ?string
Received:
  string

Record field access type errors fail correctly.
---
File "<test>", 1:17-1:18
Type error.
Type mismatch.
Expected:
  {b: int}
Received:
  {b: string}

String <> int
---
File "<test>", 1:32-1:33
Type error.
Type mismatch.
Expected:
  string
Received:
  int

Float <> int
---
File "<test>", 1:32-1:33
Type error.
Type mismatch.
Expected:
  float
Received:
  int

String <> float
---
File "<test>", 1:32-1:35
Type error.
Type mismatch.
Expected:
  string
Received:
  float

Map list key type mismatch.
---
File "<test>", 1:4-1:55
Type error.
Type mismatch.
Expected:
  int
Received:
  string

Map dict key type mismatch.
---
File "<test>", 1:4-2:13
Type error.
Type mismatch.
Expected:
  string
Received:
  int

[int] <> [string]
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  [int]
Received:
  [string]

{a: int} <> {a: float}
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  {a: float}
Received:
  {a: int}

(string, _) <> (float, _)
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  (float, string)
Received:
  (string, string)

Tagged record <> untagged record
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  {a: int}
Received:
  {@a: 1} | ...

Dict <> record
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  {a: int}
Received:
  <int>

?int <> int
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  int
Received:
  ?int

2-tuple <> 3-tuple
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  (int, int, int)
Received:
  (int, int)

Records with missing fields (1)
---
File "<test>", 1:26-1:32
Type error.
Type mismatch.
Expected:
  {a: int}
Received:
  {b: _}

Records with missing fields (2)
---
File "<test>", 1:10-1:16
Type error.
Type mismatch.
Expected:
  {a: _, b: _}
Received:
  {a: _}

Record field access type errors fail correctly.
---
File "<test>", 2:19-2:20
Type error.
Type mismatch.
Expected:
  {b: {c: int}}
Received:
  {b: {c: false | true}}

Records with missing fields (Component)
---
File "<test>", 1:4-1:7
Type error.
This is missing key 'a' of type:
  string

Closed enum <> open enum
---
File "<test>", 2:10-2:11
Type error.
Type mismatch.
Expected:
  @1
Received:
  @1 | @2 | ...

Enum vars with no subset are reported.
---
File "<test>", 3:12-3:13
Type error.
Type mismatch.
Expected:
  @1 | @2
Received:
  @3 | @4

Enum vars + literals with no subset are reported.
---
File "<test>", 2:12-2:14
Type error.
Type mismatch.
Expected:
  @1 | @2
Received:
  @3 | ...

Enum literals with no subset are reported (1).
---
File "<test>", 1:10-1:12
Type error.
Type mismatch.
Expected:
  @1
Received:
  @0 | ...

Enum literals with no subset are reported (2).
---
File "<test>", 1:10-1:12
Type error.
Type mismatch.
Expected:
  @"a"
Received:
  @0 | ...

| false | true <> only false
---
File "<test>", 1:10-1:14
Type error.
Type mismatch.
Expected:
  false
Received:
  false | true

Bool <> int
---
File "<test>", 1:25-1:29
Type error.
Type mismatch.
Expected:
  @0
Received:
  true

Int tag <> string tag
---
File "<test>", 1:38-1:52
Type error.
Type mismatch.
Expected:
  {@tag: 0}
Received:
  {@tag: "a", b: _}

Bool tag <> int tag
---
File "<test>", 1:32-1:44
Type error.
Type mismatch.
Expected:
  {@tag: 0}
Received:
  {@tag: true}

Random other tags don't compile.
---
File "<test>", 1:24-1:25
Parse error.
Only literal integer, string, and boolean values may be union tags.

Tag names must be coherent.
---
File "<test>", 1:36-1:46
Type error.
Type mismatch.
Expected:
  {@a: 0}
Received:
  {@b: 1, c: _}

Variable names must be coherent.
---
File "<test>", 2:16-2:17
Type error.
Variable 'b' must occur in each 'with' pattern.

Variable types must be coherent.
---
File "<test>", 1:38-1:39
Type error.
Type mismatch.
Expected:
  int
Received:
  string

Component names match
---
File "<test>", 1:4-1:14
Type error.
Component name mismatch.
Expected:
  A.
Received:
  B.

Components can't take extra props
---
File "<test>", 1:4-1:16
Type error.
Component 'Comp' does not accept this prop:
  c.

Implict children is typed and reported correctly
---
File "<test>", 1:8-1:14
Type error.
Type mismatch.
Expected:
  int
Received:
  string

Basic unused bindings are reported.
---
File "<test>", 1:18-1:19
Type error.
This variable is bound but never used:
  x

Unused bindings are reported in the order they appear.
---
File "<test>", 1:21-1:22
Type error.
This variable is bound but never used:
  y

Shadowing bindings can report them as unused.
---
File "<test>", 1:26-1:27
Type error.
This variable is bound but never used:
  y

Basic pattern (1).
---
File "<test>", 4:4-4:19
Matching error.
This match case is unused.

Basic pattern (2).
---
File "<test>", 6:4-6:19
Matching error.
This match case is unused.

Nest patterns merge into wildcard patterns correctly (1).
---
File "<test>", 1:33-1:48
Matching error.
This match case is unused.

Nest patterns merge into wildcard patterns correctly (2).
---
File "<test>", 4:4-4:22
Matching error.
This match case is unused.

Partial matching with integers.
---
File "<test>", 1:4-1:55
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _

Partial matching with lists (1).
---
File "<test>", 1:4-1:41
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  [_, ..._]

Partial matching with lists (2).
---
File "<test>", 1:4-1:33
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  []

Partial matching with Nullables (1).
---
File "<test>", 1:4-1:34
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  !_

Partial matching with Nullables (2).
---
File "<test>", 1:4-1:32
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  null

Partial matching with Nullables (3).
---
File "<test>", 1:4-1:48
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  !_

Partial matching with enums nested in nullables.
---
File "<test>", 1:4-1:58
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  !@1, _

Partial matching with records.
---
File "<test>", 1:4-1:56
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {a: _, b: _}

Partial matching with dictionaries (1).
---
File "<test>", 1:4-1:61
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _

Partial matching with dictionaries (2).
---
File "<test>", 1:4-1:64
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _

Partial matching with unions (1).
---
File "<test>", 1:4-2:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {@tag: 0, a: _}

Partial matching with unions (2).
---
File "<test>", 1:4-2:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {@tag: false, b: _}

Partial matching with unions (3).
---
File "<test>", 1:4-2:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {@tag: true, a: _}

Partial matching with unions (4).
---
File "<test>", 2:4-3:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, {@tag: true}

Partial matching with unions prints counterexample patterns correctly
---
File "<test>", 1:4-5:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, {@tag: 0, a: @1, b: {@tag: 10, c: _}}

Partial matching with records.
---
File "<test>", 1:4-3:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {favoriteColor: _, firstName: _}

Partial lists print correctly.
---
File "<test>", 1:5-5:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  {@kind: "anonymous", books: _}

Partial matching with enums, closed
---
File "<test>", 1:4-4:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, @1

Partial matching with unions, closed
---
File "<test>", 1:4-4:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, {@tag: 1, a: _}

Partial matching with enums, open
---
File "<test>", 1:4-5:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, _

Partial matching with unions, open
---
File "<test>", 1:4-5:10
Matching error.
This pattern-matching is not exhaustive.
Here's an example of a pattern which is not matched:
  _, _

Both nil and cons paths fail to merge into a wildcard.
---
File "<test>", 6:9-6:19
Matching error.
This match case is unused.

Dict patterns match a subset of the input.
---
File "<test>", 1:30-1:47
Matching error.
This match case is unused.

Empty dicts (<>) match all inputs (like _).
---
File "<test>", 1:26-1:34
Matching error.
This match case is unused.

Template blocks are not allowed in destructure patterns.
---
File "<test>", 1:21-1:28
Type error.
Template blocks are not allowed in a destructure pattern.

Record accessors are not allowed in destructure patterns.
---
File "<test>", 1:21-1:24
Type error.
Record '.' access is not allowed in a destructure pattern.

Cyclic dependencies are reported.
---
Compile error.
Dependency cycle detected.
A -> B -> C -> D -> B

Missing components are reported.
---
Compile error.
Missing template:
  D
Required by:
  C

Missing components are reported (by root).
---
Compile error.
Missing template:
  A
Required by:
  <test>

Duplicate names are reported.
---
Compile error.
There are multiple components with the name 'A'.

This error is incorrect. The compiler fails to detect the first unused
wildcard case. I'm not fixing this error yet, but I'm keeping this test
to track when it changes.
---
File "<test>", 1:43-1:49
Matching error.
This match case is unused.

Basic type mismatch.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
b <- a <- <input>
Expected type:
string
Received value:
[]

Map type mismatch (1).
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
[{a: string}]
Received value:
"a"

Map type mismatch (2).
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
[int]
Received value:
"a"

Missing bindings are reported
---
File: <test>
Render error.
The data supplied does not match this template's interface.
Path:
<input>
Expected type:
{z: string}
Input is missing keys:
z

Missing bindings are reported (with nested record)
---
File: <test>
Render error.
The data supplied does not match this template's interface.
Path:
<input>
Expected type:
{aa: string, d: {e: int}}
Input is missing keys:
aa

Bad enums are reported: boolean.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
b <- <input>
Expected type:
false
Received value:
true

Bad enums are reported: int.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
@1 | @2
Received value:
3

Bad enums are reported: int.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
@"a" | @"b"
Received value:
"c"

Tuple size mismatch.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
(string, string)
Received value:
[ "a" ]

Bad unions are reported (1).
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
{@tag: 1, a: string}
Received value:
{ "tag": "a", "a": "a" }

Bad unions are reported (2).
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
a <- <input>
Expected type:
{@tag: 1, a: string}
Received value:
{ "tag": 2, "a": "a" }

Multiple decode errors are reported.
---
File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
b <- a <- <input>
Expected type:
string
Received value:
[]

File "<test>"
Render error.
The data supplied does not match this template's interface.
Path:
c <- <input>
Expected type:
string
Received value:
0

File: <test>
Render error.
The data supplied does not match this template's interface.
Path:
d <- <input>
Expected type:
{e: string}
Input is missing keys:
e

Invalid field names.
---
File "<test>", 1:27-1:31
Parse error.
This is not a valid field name.

Missing , or }.
---
File "<test>", 1:26-1:27
Parse error.
Expected a ',' or '}'.

Unclosed interface
---
File "<test>", 1:21-1:21
Parse error.
Expected a '%}'.

Bad prop name (1).
---
File "<test>", 1:14-1:18
Parse error.
This is not a valid prop name.

Bad prop name (2).
---
File "<test>", 1:22-1:26
Parse error.
This is not a valid prop name.

Bad token after a variant (1).
---
File "<test>", 1:24-1:28
Parse error.
This is not a valid prop name. You possibly forgot a '|'.

Bad token after a variant (2).
---
File "<test>", 1:21-1:25
Parse error.
This is not a valid prop name. You possibly forgot a '|'.

Bad token after a variant (3).
---
File "<test>", 1:19-1:23
Parse error.
This is not a valid prop name. You possibly forgot a '|'.

Bad token after a variant (4).
---
File "<test>", 1:22-1:26
Parse error.
This is not a valid prop name. You possibly forgot a '|'.

Missing equals.
---
File "<test>", 1:16-1:19
Parse error.
Expected an '='.

Invalid type (1).
---
File "<test>", 1:16-1:20
Parse error.
This is not a valid type.

Invalid type (2).
---
File "<test>", 1:17-1:21
Parse error.
This is not a valid type.

Invalid type (3).
---
File "<test>", 1:17-1:21
Parse error.
This is not a valid type.

Invalid type (4).
---
File "<test>", 1:17-1:21
Parse error.
This is not a valid type.

Invalid type (5).
---
File "<test>", 1:18-1:22
Parse error.
This is not a valid type.

Invalid type (6).
---
File "<test>", 1:20-1:24
Parse error.
This is not a valid type.

Invalid type (7).
---
File "<test>", 1:17-1:21
Parse error.
This is not a valid type.

Invalid type (8).
---
File "<test>", 1:17-1:21
Parse error.
This is not a valid type.

Invalid type (9).
---
File "<test>", 1:22-1:26
Parse error.
This is not a valid type.

Missing colon (1).
---
File "<test>", 1:19-1:20
Parse error.
Expected a ':'.

Missing colon (2).
---
File "<test>", 1:20-1:21
Parse error.
Expected a ':'.

Bad enum
---
File "<test>", 1:17-1:18
Parse error.
Expected a string or an integer.

Bad token after record pipe.
---
File "<test>", 1:26-1:27
Parse error.
Expected a record type or an '...'.

Bad token after string enum pipe.
---
File "<test>", 1:23-1:24
Parse error.
Expected an enum value or an '...'.

Bad token after int enum pipe.
---
File "<test>", 1:21-1:22
Parse error.
Expected an enum value or an '...'.

Missing >
---
File "<test>", 1:20-1:21
Parse error.
Expected a '>'.

Missing ]
---
File "<test>", 1:20-1:21
Parse error.
Expected a ']'.

Missing )
---
File "<test>", 1:20-1:21
Parse error.
Expected a ',' or ')'.

Bad string enum
---
File "<test>", 1:24-1:25
Parse error.
Expected a string.

Bad int enum
---
File "<test>", 1:22-1:25
Parse error.
Expected an integer.

Bad boolean
---
File "<test>", 1:24-1:25
Parse error.
Expected a boolean.

Bad union tag type
---
File "<test>", 1:21-1:22
Parse error.
Only literal integer, string, and boolean values may be union tags.

Duplicate declarations
---
File "<test>", 1:20-1:28
Type error.
Prop 'x' is already defined in the interface.

Non-existent type names.
---
File "<test>", 1:16-1:20
Type error.
There is no type named 'lmao'.

Untagged unions (1)
---
File "<test>", 1:18-1:26
Type error.
You cannot union records without a '@' tag field.

Untagged unions (2)
---
File "<test>", 1:38-1:49
Type error.
You cannot union records without a '@' tag field.

Tagged unions with mismatched tag names
---
File "<test>", 1:30-1:42
Type error.
This record has tag field '@badtag' instead of '@tag'.

Duplicate tags.
---
File "<test>", 1:30-1:39
Type error.
Tag value '1' is already used in this union.

Open boolean unions.
---
File "<test>", 1:32-1:37
Type error.
Unions with boolean tags cannot be opened with '...'.

Tag type error: int <> string.
---
File "<test>", 1:37-1:40
Type error.
Type mismatch.
Expected:
  int
Received:
  string

Tag type error: string <> bool.
---
File "<test>", 1:39-1:43
Type error.
Type mismatch.
Expected:
  string
Received:
  true

Tag type error: bool <> int.
---
File "<test>", 1:41-1:44
Type error.
Type mismatch.
Expected:
  false | true
Received:
  int

Interface type error: bool <> int.
---
File "<test>", 1:14-1:21
Type error.
This interface does not match the implementation.
Prop name:
  x
Interface:
  int
Implementation:
  true

Interface is missing props.
---
File "<test>", 1:4-1:21
Type error.
This interface does not match the implementation.
Missing prop name:
  y
Of type:
  string

Interface is missing record fields.
---
File "<test>", 1:14-1:26
Type error.
This interface does not match the implementation.
Prop name:
  x
Interface:
  {a: int}
Implementation:
  {a: string, b: string}

Interface is missing enum cases.
---
File "<test>", 1:14-1:31
Type error.
This interface does not match the implementation.
Prop name:
  x
Interface:
  @0 | @1 | ...
Implementation:
  @0 | @1 | @2 | ...

Interface is missing union cases.
---
File "<test>", 1:14-1:53
Type error.
This interface does not match the implementation.
Prop name:
  x
Interface:
  {@tag: 0} | {@tag: 1, a: int} | ...
Implementation:
  {@tag: 0} | {@tag: 1, a: string} | {@tag: 2, b: string} | ...

Unknown is not equal to any other type.
---
File "<test>", 1:14-1:19
Type error.
This interface does not match the implementation.
Prop name:
  x
Interface:
  _
Implementation:
  string

